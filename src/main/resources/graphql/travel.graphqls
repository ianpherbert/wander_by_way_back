schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    createUser(userInput: UserInput!) : UserOutput!
    updateUser(userInput: UserInput!) : UserOutput!
    deleteUser(userId: String!) : Boolean!
}

type Query {
    searchCity(query: String!) : [CityOutput]
    searchAirport(query: String!) : [AirportOutput]
    searchStation(query: String!) : [StationOutput]
    findCityById(cityId: String!) : CityOutput
    findAirportById(airportId: String!) : AirportOutput
    findStationById(stationId: String!) : StationOutput
    findAllRoutesFromCity(cityId: String!) : [RouteOutput]!
    findAllCitiesByAirportId(airportId: String!) : [CityOutput]
    searchUser(email: String, userName: String) : UserOutput
    verifyEmail(email: String!) : Boolean
    verifyUserName(userName: String!) : Boolean
}

input UserInput{
    userName: String!
    email: String!
    firstName: String!
    lastName: String!
    country: String!
    region: String
    phoneNumber: String
    status: [UserStatus]!
}

enum UserStatus{
    VERIFIED,
    PENDING,
    SUSPENDED,
    ACTIVE
}

type CityOutput{
    id : String!
    name: String!
    type: CityType!
    population: Int
    latitude: String!
    longitude: String!
    country: String!
    airports: [AirportOutput]
    trainStations: [StationOutput]
}

type StationOutput{
    id: String!
    companyIds: [CompanyIdOutput]
    name: String!
    apiId: String
    type: StationType!
    slug: String!
    uicId: String
    latitude: String!
    longitude: String!
    country: String
    main: Boolean!
    airport: Boolean!
    parentId: String
}

type CompanyIdOutput{
    company: String!
    companyId: String!
}

type AirportOutput{
    id: String!
    location: AirportLocationOutput
    name: String!
    latitude: String!
    longitude: String!
    iata: String
    icao: String
}

type AirportLocationOutput{
    country: String
    region: String
    cities: [String]
}

type UserOutput{
    name: String!
    email: String!
}

type CitySearchOutput{
    name: String!
    population: Int!
    country: String!
    cityType: CityType!
    id: String!
}

type AirportSearchOutput{
    name: String!
    icao: String
    iata: String
    id: String
    cities: [String]!
    country: String
}

type StationSearchOutput{
    id: String
    type: StationType
    name: String
    country: String
}

type RouteOutput{
    to: RouteStopOutput!
    from: RouteStopOutput!
    type: RouteType!
    durationTotal: Int
    durationMinutes: Int
    durationHours: Int
}

type RouteStopOutput{
    name: String
    id: String
    country: String
    latitude: String
    longitude: String
}

enum CityType{
    MEGACITY
    LARGECITY
    MEDIUMCITY
    SMALLCITY
    TOWN
    VILLAGE
}

enum StationType{
TRAIN
BUS
FERRY
OTHER
}

enum RouteType{
    TRAIN
    BUS
    PLANE
    BOAT
    CAR
    OTHER
}